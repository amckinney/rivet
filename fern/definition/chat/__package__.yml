# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  localCommons: common.yml
  chatCommons: ../chat/common.yml
  commons: ../common.yml

service:
  auth: true
  base-path: ""
  url: Chat
  audiences:
    - public
  endpoints:
    sendMessage:
      path: /messages
      method: POST
      docs: Sends a chat message to a given topic.
      request:
        body: SendMessageRequest
      response: SendMessageResponse

    getThreadHistory:
      path: /threads/{thread_id}/history
      method: GET
      docs: |-
        Returns message history for a given thread in a certain direction.
        Defaults to querying messages before ts.
      path-parameters:
        thread_id:
          type: uuid
      request:
        name: GetThreadHistoryRequest
        query-parameters:
          ts:
            docs: RFC3339 timestamp.
            type: optional<datetime>
          count:
            docs: >-
              How many messages to collect in each direction.
              If querying
              `rivet.api.chat.common#QueryDirection$before_and_after`,
              `rivet.api.chat.common#QueryDirection$chat_messages` will be
              `count *
              2`.
            type: double
          query_direction:
            docs: >-
              Represents which direction to query messages from relative to the
              given
              timestamp.
            type: optional<localCommons.QueryDirection>
      response: GetThreadHistoryResponse

    watchThread:
      path: /threads/{thread_id}/live
      method: GET
      docs: |-
        Fetches all relevant changes from a thread that have happened since the
        given watch index.
      path-parameters:
        thread_id:
          type: uuid
      request:
        name: WatchThreadRequest
        query-parameters:
          watch_index:
            docs: A query parameter denoting the requests watch index.
            type: optional<string>
      response: WatchThreadResponse

    setThreadRead:
      path: /threads/{thread_id}/read
      method: POST
      docs: Updates the current identity's last read timestamp in the given thread.
      path-parameters:
        thread_id:
          type: uuid
      request:
        body: SetThreadReadRequest

    getThreadTopic:
      path: /threads/{thread_id}/topic
      method: GET
      docs: Fetches the topic of a thread.
      path-parameters:
        thread_id:
          type: uuid
      response: GetThreadTopicResponse

    setTypingStatus:
      path: /threads/{thread_id}/typing-status
      method: PUT
      docs: Updates the current identity's typing status in the given thread.
      path-parameters:
        thread_id:
          type: uuid
      request:
        body: SetTypingStatusRequest

types:
  SendMessageRequest:
    properties:
      topic: localCommons.SendTopic
      message_body: localCommons.SendMessageBody

  SendMessageResponse:
    properties:
      chat_message_id:
        type: uuid

  GetThreadHistoryResponse:
    properties:
      chat_messages:
        docs: |-
          Ordered old to new.
          If querying `rivet.api.chat.common#before_and_after`, this will be
          `count * 2` long.
        type: list<chatCommons.Message>

  WatchThreadResponse:
    properties:
      chat_messages:
        docs: |-
          All messages new messages posted to this thread. Ordered
          old to new.
        type: list<chatCommons.Message>
      typing_statuses:
        docs: All identities that are currently typing in this thread.
        type: optional<list<chatCommons.IdentityTypingStatus>>
      watch: commons.WatchResponse

  SetThreadReadRequest:
    properties:
      last_read_ts:
        docs: |-
          Any messages newer than this timestamp will be marked as unread.
          This should be the current timestamp (in milliseconds).
        type: datetime

  GetThreadTopicResponse:
    properties:
      topic: chatCommons.SimpleTopic

  SetTypingStatusRequest:
    properties:
      status: chatCommons.TypingStatus
